<!-- index_hacker_style.html
Replace `assets/intro.mp4` with your video file (same folder or use a URL).
Open this file in a modern browser. If autoplay is blocked, click play on the video.
--> <!doctype html>

<html lang="tr">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>LOWERS</title>
  <style>
    :root{--bg:#07090b;--neon:#33ff77;--accent:#00e6ff}
    *{box-sizing:border-box}
    html,body{height:100%;margin:0}
    body{
      font-family: ui-sans-serif,system-ui,Segoe UI,Roboto,"Helvetica Neue",Arial;
      background: radial-gradient(ellipse at center, #020408 0%, #071017 60%, #000 100%);
      color:var(--neon);
      overflow:hidden;
      display:flex;align-items:center;justify-content:center;
    }/* Matrix-like vertical lines */
.matrix{
  position:absolute;inset:0;pointer-events:none;opacity:0.12;
  background-image:linear-gradient(180deg, rgba(0,0,0,0) 0%, rgba(0,0,0,0.15) 50%, rgba(0,0,0,0) 100%);
  mix-blend-mode:screen;
}
.matrix::before{
  content:'';position:absolute;inset:0;background-image:
    linear-gradient(0deg, rgba(0,255,119,0.02) 1px, transparent 1px);
  background-size:100% 18px;opacity:0.6;filter:blur(0.6px);
}

/* Center shell */
.stage{position:relative;z-index:10;width:100%;height:100%;display:flex;align-items:center;justify-content:center}

/* Video full-screen layer */
#videoWrap{position:absolute;inset:0;display:flex;align-items:center;justify-content:center;background:#000}
video{width:100%;height:100%;object-fit:cover}

/* After video: reveal container */
.reveal{
  display:flex;flex-direction:column;align-items:center;gap:18px;padding:28px;border-radius:14px;
  backdrop-filter: blur(6px) saturate(140%);
  border:1px solid rgba(255,255,255,0.04);
  box-shadow:0 10px 40px rgba(0,0,0,0.6);
}

/* Main text look */
.logo{
  font-weight:900;letter-spacing:8px;font-size:92px;line-height:0.9;font-family:monospace;
  color:transparent;background:linear-gradient(90deg,var(--neon),var(--accent));-webkit-background-clip:text;
  position:relative
}

/* Glitch layers */
.logo::before,.logo::after{
  content:attr(data-text);position:absolute;left:0;top:0;right:0;bottom:0;
  -webkit-background-clip:text;color:transparent;
  opacity:0.8;
}
.logo::before{transform:translate(2px,-2px);filter:hue-rotate(120deg);mix-blend-mode:screen;opacity:0.6}
.logo::after{transform:translate(-2px,2px);filter:hue-rotate(-60deg);opacity:0.6}
@keyframes glitch {
  0%{clip-path:inset(0 0 0 0)}
  10%{clip-path:inset(10% 0 70% 0)}
  20%{clip-path:inset(40% 0 20% 0)}
  30%{clip-path:inset(20% 0 60% 0)}
  40%{clip-path:inset(60% 0 10% 0)}
  50%{clip-path:inset(0 0 0 0)}
  100%{clip-path:inset(0 0 0 0)}
}
.logo.glitch{animation:glitch 1s infinite}

/* Typewriter */
.type{font-family: 'Courier New', Courier, monospace;font-size:28px;color:var(--neon);min-height:34px}
.cursor{display:inline-block;width:12px;height:28px;background:var(--neon);margin-left:6px;vertical-align:middle;opacity:1;animation:blink 0.8s steps(1) infinite}
@keyframes blink{50%{opacity:0}}

/* Small subtitle */
.sub{font-size:13px;opacity:0.7;letter-spacing:2px}

/* Controls (hidden by default) */
.controls{display:flex;gap:8px;margin-top:8px}
.btn{padding:8px 12px;border-radius:8px;background:rgba(255,255,255,0.03);border:1px solid rgba(255,255,255,0.04);cursor:pointer;color:var(--neon)}

/* Responsive */
@media (max-width:600px){.logo{font-size:48px;letter-spacing:6px}.type{font-size:18px}}

  </style>
</head>
<body>
  <div class="matrix" aria-hidden="true"></div>
  <div class="stage">
    <!-- Video overlay -->
    <div id="videoWrap">
      <video id="introVideo" playsinline muted preload="auto">
        <source src="assets/intro.mp4" type="video/mp4">
        <!-- If you prefer a remote url, replace the src above with a full URL -->
        Your browser does not support HTML video.
      </video>
      <!-- Play hint if autoplay blocked -->
      <button id="playHint" class="btn" style="position:absolute;z-index:20;display:none;">▶️ Play</button>
    </div><!-- Reveal area (hidden until video ends) -->
<div id="reveal" class="reveal" style="display:none;">
  <div class="logo" id="logo" data-text="LOWERS"></div>
  <div class="type" id="typed"></div>
  <div class="sub">System boot · secure shell established</div>
  <div class="controls" id="controls" style="display:none;">
    <button class="btn" id="replay">Replay Intro</button>
    <button class="btn" id="enter">Enter</button>
  </div>
</div>

  </div>  <script>
    const video = document.getElementById('introVideo');
    const playHint = document.getElementById('playHint');
    const reveal = document.getElementById('reveal');
    const logo = document.getElementById('logo');
    const typed = document.getElementById('typed');
    const controls = document.getElementById('controls');
    const replay = document.getElementById('replay');
    const enter = document.getElementById('enter');

    const TARGET_TEXT = 'LOWERS';

    // Safe: if video can't autoplay (browser policy), show play button
    function tryPlay(){
      const p = video.play();
      if(p !== undefined){
        p.then(()=>{
          playHint.style.display='none';
        }).catch(()=>{
          playHint.style.display='block';
        });
      }
    }

    // When video ends, reveal the UI and start typing animation
    function onVideoEnded(){
      document.getElementById('videoWrap').style.display='none';
      reveal.style.display='flex';
      // small delay then glitch effect then type
      logo.classList.add('glitch');
      setTimeout(()=>{logo.classList.remove('glitch'); startTyping(TARGET_TEXT, typed, 90); controls.style.display='flex'}, 700);
    }

    // Typewriter effect
    function startTyping(text, el, speed=80){
      el.textContent = '';
      let i=0;
      const cursor = document.createElement('span');
      cursor.className='cursor';
      el.appendChild(cursor);
      function step(){
        if(i < text.length){
          // insert char before cursor
          cursor.insertAdjacentText('beforebegin', text[i]);
          i++;
          const jitter = Math.random() < 0.08;
          if(jitter) logo.classList.add('glitch'); else logo.classList.remove('glitch');
          setTimeout(step, speed + Math.random()*60);
        } else {
          logo.setAttribute('data-text', text);
          // remove cursor after a moment
          setTimeout(()=>cursor.remove(),500);
        }
      }
      step();
    }

    // Fallback: if there is no video source, skip straight to typing
    function hasVideoSource(){
      const srcs = video.querySelectorAll('source');
      for(const s of srcs) if(s.src && s.src.trim() !== '') return true;
      return false;
    }

    // Event listeners
    video.addEventListener('ended', onVideoEnded);
    playHint.addEventListener('click', ()=>{video.play(); playHint.style.display='none'});

    // Buttons
    replay.addEventListener('click', ()=>{
      // show video again and play
      document.getElementById('videoWrap').style.display='flex';
      reveal.style.display='none';
      typed.textContent='';
      tryPlay();
    });
    enter.addEventListener('click', ()=>{
      // Navigate or show main site — modify to suit your site
      alert('Giriş: Lowers — Customize this action.');
    });

    // Init
    if(hasVideoSource()){
      tryPlay();
      // in case autoplay is allowed but video stalls, show play hint after 1s
      setTimeout(()=>{ if(video.paused) playHint.style.display='block'; },1000);
    } else {
      // no video -> skip
      onVideoEnded();
    }
  </script></body>
</html>
